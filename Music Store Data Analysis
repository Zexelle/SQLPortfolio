-- Dataset: Music Store Data Analysis
-- Source with Links: https://www.youtube.com/watch?v=VFIuIjswMKM&t=931s
-- Queried using: MySQL Workbench


-- Question Set 1 - Easy

-- Q1: Who is the senior most employee based on the job title?

SELECT *
FROM employee
ORDER BY levels DESC
limit 1;

-- Q2: Which countries have the most invoices?

SELECT *
FROM invoice;

SELECT COUNT(*) as c, billing_country
FROM invoice
GROUP BY billing_country
ORDER BY c DESC;

-- Q3: What are the top 3 values of the total invoices?

SELECT *
FROM invoice
ORDER BY total DESC;

SELECT total
FROM invoice
ORDER BY total DESC
limit 3;

-- Q4: Which city has the best customers?
-- We would like to throw a promotional Music Festival in the city we made the most money. Write a query that returns one city that has the highest sum of invoice totals.
-- Return both the city name & sum of all invoice totals.

SELECT *
FROM invoice;

SELECT SUM(total)
	AS invoice_total,
	    billing_city
FROM invoice
GROUP BY billing_city
ORDER BY invoice_total DESC;

-- Q5: Who is the best customer?
-- The customer who has spent the most money will be declared the best customer. Write a query that returns the person who has spent the most money.

SELECT *
FROM customer;

SELECT MIN(customer.customer_id), 
	   MIN(customer.first_name),
       MIN(customer.last_name),
SUM(invoice.total) AS total       
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
GROUP BY customer.customer_id
ORDER BY total DESC
limit 1;




-- Question Set 2 - Moderate

-- Q1: Write query to return the email, first name, last name, & genre of all rock music listeners. Return your list ordered alphabetically by email starting with A

SELECT *
FROM customer;

SELECT DISTINCT email,
                first_name,
				last_name
FROM customer
JOIN invoice ON customer.customer_id = invoice.customer_id
JOIN invoice_line ON invoice.invoice_id = invoice_line.invoice_id
WHERE track_id IN(
    SELECT track_id FROM track
    JOIN genre ON track.genre_id = genre.genre_id
    WHERE genre.name LIKE 'Rock'
)
ORDER BY email;

-- Q2: Let's invite the artists who have written the most rock music in our dataset. Write a query that returns the Artist name and total track count of the top 10 rock bands.

SELECT MIN(artist.artist_id),
       MIN(artist.name),
COUNT(artist.artist_id) AS number_of_songs
FROM track
JOIN album2 ON album2.album_id = track.album_id
JOIN artist ON artist.artist_id = album2.artist_id
JOIN genre ON genre.genre_id = track.genre_id
WHERE genre.name LIKE 'Rock'
GROUP BY artist.artist_id
ORDER BY number_of_songs DESC
LIMIT 10;

-- Q3: Return all the track names that have a song length longer than the average song length.
-- Return the Name and Milliseconds for each track. Order by the song length with the longest songs listed first.

SELECT name,
       milliseconds
FROM track
WHERE milliseconds > (
    SELECT AVG(milliseconds) AS avg_track_length 
    FROM track)
ORDER BY milliseconds DESC;

SELECT name,
       milliseconds
FROM track
WHERE milliseconds > 251177
ORDER BY milliseconds DESC;




-- Question Set 3 - Advanced


-- Q1: We want to find out the most popular music Genre for each country.
-- We determine the most popular genre as the genre with the highest amount of purchases.

WITH popular_genre AS
(
   SELECT COUNT(invoice_line.quantity) AS purchases,
                                          customer.country,
                                          genre.name,
                                          genre.genre_id,
   ROW_NUMBER() OVER(PARTITION BY customer.country ORDER BY COUNT(invoice_line.quantity) DESC) AS RowNo
   FROM invoice_line
   JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
   JOIN customer ON customer.customer_id = invoice.customer_id
   JOIN track ON track.track_id = invoice_line.track_id
   JOIN genre ON genre.genre_id = track.genre_id
   GROUP BY 2,3,4
   ORDER BY 2 ASC, 1 DESC
)
SELECT *
FROM popular_genre
WHERE RowNO <= 1;

-- Method2

With RECURSIVE
    sales_per_country AS(
         SELECT COUNT(*) AS purchases_per_genre,
							customer.country,
                            genre.name,
                            genre.genre_id
         FROM invoice_line
         JOIN invoice ON invoice.invoice_id = invoice_line.invoice_id
         JOIN customer ON customer.customer_id = invoice.customer_id
         JOIN track ON track.track_id = invoice_line.track_id
         JOIN genre ON genre.genre_id = track.genre_id
         GROUP BY 2,3,4
         ORDER BY 2
	),
    max_genre_per_country AS (SELECT MAX(purchases_per_genre) AS max_genre_number,
                                                                 country
	    FROM sales_per_country
        GROUP BY 2
        ORDER BY 2)
         
SELECT sales_per_country.*
FROM sales_per_country
JOIN max_genre_per_country ON sales_per_country.country = max_genre_per_country.country
WHERE sales_per_country.purchases_per_genre = max_genre_per_country.max_genre_number;




-- Q2: Write a query that determines the customer that has spent the most on music for each country. 
-- Write a query that returns the country along with the top customer and how much they spent. 
-- For countries where the top amount spent is shared, provide all customers who spent this amount.

WITH RECURSIVE
	customer_with_country AS (
		SELECT customer.customer_id,
			   first_name,
               last_name,
               billing_country,
		SUM(total) AS total_spending
        FROM invoice
        JOIN customer ON customer.customer_id = invoice.customer_id
        GROUP BY 1,2,3,4
        ORDER BY 1,5 DESC),
        
	country_max_spending AS(
	    SELECT billing_country, MAX(total_spending) AS max_spending
        FROM customer_with_country
        GROUP BY billing_country)
        
SELECT cc.billing_country,
	   cc.total_spending,
       cc.first_name,
       cc.last_name
FROM customer_with_country cc
JOIN country_max_spending ms
ON cc.billing_country = ms.billing_country
WHERE cc.total_spending = ms.max_spending
ORDER BY 1;
